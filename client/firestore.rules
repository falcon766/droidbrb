rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own profile
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Robots can be read by anyone, but only owners can write
    match /robots/{robotId} {
      allow read: if true;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.ownerId;
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.ownerId;
    }
    
    // Rentals can be read by participants, created by renters
    match /rentals/{rentalId} {
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.renterId || 
         request.auth.uid == resource.data.ownerId);
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.renterId;
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.renterId || 
         request.auth.uid == resource.data.ownerId);
    }
    
    // Messages can be read and written by participants
    match /messages/{messageId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.senderId || 
         request.auth.uid == resource.data.receiverId);
      allow list: if request.auth != null;
    }
    
    // Communities are public for reading, members can write
    match /communities/{communityId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    // Community members
    match /community_members/{memberId} {
      allow read: if true;
      allow write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }
    
    // Posts are public for reading, authors can write
    match /posts/{postId} {
      allow read: if true;
      allow write: if request.auth != null && 
        request.auth.uid == resource.data.authorId;
    }
    
    // Comments are public for reading, authors can write
    match /comments/{commentId} {
      allow read: if true;
      allow write: if request.auth != null && 
        request.auth.uid == resource.data.authorId;
    }
    
    // Events are public for reading, organizers can write
    match /events/{eventId} {
      allow read: if true;
      allow write: if request.auth != null && 
        request.auth.uid == resource.data.organizerId;
    }
    
    // Event attendees
    match /event_attendees/{attendeeId} {
      allow read: if true;
      allow write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }
    
    // Reviews are public for reading, reviewers can write
    match /reviews/{reviewId} {
      allow read: if true;
      allow write: if request.auth != null && 
        request.auth.uid == resource.data.reviewerId;
    }
  }
} 